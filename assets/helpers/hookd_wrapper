#!/bin/bash
dirname=$(dirname $0)
hooktype=$(basename $0)

# Check for updates.  Since there is no post-fetch hook, we check before we're about to run a hook.
remote_branch=$(git show-ref origin/--hooks--)
[ -n "$remote_branch" ] && (
  cd ${dirname}/shared > /dev/null
  local_rev=$(GIT_OBJECT_DIRECTORY="../../objects" git rev-parse HEAD)
  [ "${remote_branch%% *}" != "$local_rev" ] && (
    echo "Hook updates were applied:" 1>&2
    GIT_OBJECT_DIRECTORY=../../objects git branch origin/--hooks-- ${remote_branch%% *} -f 1>&2
    GIT_OBJECT_DIRECTORY=../../objects git reset --hard ${remote_branch%% *} 1>&2
  )
)
  
for base_dir in "${dirname}"/{shared,local}; do
  [ -d "${base_dir}/${hooktype}.d" ] || continue
  for script in "${base_dir}/${hooktype}.d"/*; do
    HELPERS="${base_dir}/helpers" "${script}" || exit $?
  done
done
